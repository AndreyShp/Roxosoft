// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Roxosoft.Orders.Api.DAL.Context;

namespace Roxosoft.Orders.Api.Migrations
{
    [DbContext(typeof(OrdersDbContext))]
    [Migration("20191012092928_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Roxosoft.Orders.Api.DAL.Dto.OrderDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreationTime = new DateTime(2019, 10, 12, 11, 29, 27, 618, DateTimeKind.Local).AddTicks(2174),
                            Status = 2
                        },
                        new
                        {
                            Id = 2L,
                            CreationTime = new DateTime(2019, 10, 12, 12, 29, 27, 619, DateTimeKind.Local).AddTicks(4826),
                            Status = 1
                        },
                        new
                        {
                            Id = 3L,
                            CreationTime = new DateTime(2019, 10, 12, 12, 24, 27, 619, DateTimeKind.Local).AddTicks(4843),
                            Status = 2
                        });
                });

            modelBuilder.Entity("Roxosoft.Orders.Api.DAL.Dto.OrderProductDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("OrderId");

                    b.Property<decimal>("Price");

                    b.Property<long>("ProductId");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            OrderId = 1L,
                            Price = 500m,
                            ProductId = 2L,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2L,
                            OrderId = 1L,
                            Price = 26.5m,
                            ProductId = 3L,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3L,
                            OrderId = 2L,
                            Price = 98m,
                            ProductId = 1L,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4L,
                            OrderId = 2L,
                            Price = 358.99m,
                            ProductId = 4L,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 5L,
                            OrderId = 3L,
                            Price = 500.99m,
                            ProductId = 1L,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("Roxosoft.Orders.Api.DAL.Dto.ProductDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Масло"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Сыр"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Хлеб"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Колбаса"
                        });
                });

            modelBuilder.Entity("Roxosoft.Orders.Api.DAL.Dto.OrderProductDto", b =>
                {
                    b.HasOne("Roxosoft.Orders.Api.DAL.Dto.OrderDto", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Roxosoft.Orders.Api.DAL.Dto.ProductDto", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
